generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Otp {
  id        Int      @id @default(autoincrement())
  code      String   @db.VarChar(255)
  userId    String?  @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TruckClassification {
  id            Int      @id @default(autoincrement())
  name          String   @unique(map: "axleClass") @db.VarChar(255)
  serviceId     Int
  tankCapacity  Decimal? @default(0.00) @db.Decimal(10, 2)
  serviceAreaId Int?

  deleted Int? @default(0)
  status  Int? @default(0)

  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  Service                   Service                     @relation(fields: [serviceId], references: [id])
  Vehicle                   Vehicle[]
  DesludgingServicePricing  DesludgingServicePricing[]
  WaterServicePricing       WaterServicePricing[]
  BiodigesterServicePricing BiodigesterServicePricing[]
  ServiceArea               ServiceArea?                @relation(fields: [serviceAreaId], references: [id])
}

model Service {
  id                  Int                   @id @default(autoincrement())
  name                String?
  status              Int?                  @default(1)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  ServicePoint        ServicePoint[]
  TruckClassification TruckClassification[]

  DesludgingServicePricing  DesludgingServicePricing[]
  WaterServicePricing       WaterServicePricing[]
  BiodigesterServicePricing BiodigesterServicePricing[]
  ServicesInArea            ServicesInArea[]
}

model Balance {
  id           Int        @id @default(autoincrement())
  balance      Decimal?   @default(0.00) @db.Decimal(10, 2)
  deleted      Int?       @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  MainEntity   MainEntity @relation(fields: [mainEntityId], references: [id])
  mainEntityId Int
}

// model Location {
//   id                        String                      @id @db.VarChar(255)
//   name                      String?
//   lat                       Decimal?                    @db.Decimal(10, 8)
//   lng                       Decimal?                    @db.Decimal(10, 8)
//   deleted                   Int?                        @default(0)
//   createdAt                 DateTime                    @default(now())
//   updatedAt                 DateTime                    @updatedAt
//   PricingModel              PricingModel[]
//   DesludgingServicePricing  DesludgingServicePricing[]
//   WaterServicePricing       WaterServicePricing[]
//   BiodigesterServicePricing BiodigesterServicePricing[]
// }

model TransactionClosure {
  id            Int      @id @default(autoincrement())
  userId        Int?
  transactionId String?  @db.VarChar(255)
  gpsAccuracy   Decimal? @db.Decimal(10, 2)
  lat           Decimal? @db.Decimal(10, 8)
  lng           Decimal? @db.Decimal(10, 8)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Discount {
  id        Int      @id @default(autoincrement())
  trip1     Decimal  @db.Decimal(10, 2)
  trip2     Decimal  @db.Decimal(10, 2)
  trip3     Decimal  @db.Decimal(10, 2)
  trip4     Decimal  @db.Decimal(10, 2)
  trip5     Decimal  @db.Decimal(10, 2)
  beyond5   Decimal  @db.Decimal(10, 2)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  latitude                  Decimal?                    @db.Decimal(10, 6)
  longitude                 Decimal?                    @db.Decimal(10, 6)
  deleted                   Int?                        @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  DesludgingServicePricing  DesludgingServicePricing[]
  WaterServicePricing       WaterServicePricing[]
  BiodigesterServicePricing BiodigesterServicePricing[]
  ServiceArea               ServiceArea[]
}

model ServiceArea {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)

  // cityPolygon String @db.VarChar(255)
  lat1 Decimal @db.Decimal(10, 2)
  lng1 Decimal @db.Decimal(10, 2)
  lat2 Decimal @db.Decimal(10, 2)
  lng2 Decimal @db.Decimal(10, 2)
  lat3 Decimal @db.Decimal(10, 2)
  lng3 Decimal @db.Decimal(10, 2)
  lat4 Decimal @db.Decimal(10, 2)
  lng4 Decimal @db.Decimal(10, 2)

  regionId Int
  status   Int? @default(0)

  deleted                   Int?                        @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  TruckClassification       TruckClassification[]
  WaterServicePricing       WaterServicePricing[]
  BiodigesterServicePricing BiodigesterServicePricing[]
  DesludgingServicePricing  DesludgingServicePricing[]
  Region                    Region                      @relation(fields: [regionId], references: [id])
  ServicesInArea            ServicesInArea[]
}

model ServicesInArea {
  id            Int         @id @default(autoincrement())
  serviceAreaId Int
  serviceId     Int
  ServiceArea   ServiceArea @relation(fields: [serviceAreaId], references: [id])
  status        Int?        @default(0)
  deleted       Int?        @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Service       Service     @relation(fields: [serviceId], references: [id])

  @@unique([serviceAreaId, serviceId], name: "areaServiceKey")
}

// model ServiceLocation {
//   id     Int    @id @default(autoincrement())
//   Region Region @relation(fields: [regionId], references: [id])
//   status Int?   @default(0)

//   deleted       Int?         @default(0)
//   createdAt     DateTime     @default(now())
//   updatedAt     DateTime     @updatedAt
//   regionId      Int
//   ServiceArea   ServiceArea? @relation(fields: [serviceAreaId], references: [id])
//   serviceAreaId Int?

//   Service   Service? @relation(fields: [serviceId], references: [id])
//   serviceId Int?
// }

// model District {
//   id           Int       @id @default(autoincrement())
//   regionId     Int
//   districtName String    @db.VarChar(255)
//   deleted      Int?      @default(0)
//   createdAt    DateTime?
//   updatedAt    DateTime?
// }

model MainEntity {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Commission Commission[]
  Balance    Balance[]
}

model Commission {
  id           Int        @id @default(autoincrement())
  mainEntityId Int
  commission   Decimal    @unique(map: "commission") @db.Decimal(10, 2)
  status       Int?       @default(1)
  deleted      Int?       @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  MainEntity   MainEntity @relation(fields: [mainEntityId], references: [id])
  //icesspool and mmda
}

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  type      String?  @db.VarChar(255)
  to        Int
  sentBy    Int
  message   String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MomoAccount {
  id          Int      @id @default(autoincrement())
  operatorId  String   @unique(map: "operatorId") @db.VarChar(255)
  momoNumber  String?  @db.VarChar(255)
  momoNetwork Int?
  deleted     Int?     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MomoNetwork {
  id        Int      @id @default(autoincrement())
  network   String   @db.VarChar(255)
  abbrv     String   @db.VarChar(255)
  status    Int?     @default(0)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id            Int      @id @default(autoincrement())
  transactionId String   @db.VarChar(255)
  paymentId     String   @db.VarChar(255)
  status        Int?     @default(0)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// model PricingModel {
//   id Int @id @default(autoincrement())
//   // Location Location @relation(fields: [locationId], references: [id])

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   // locationId String   @db.VarChar(255)
//   Service   Service  @relation(fields: [serviceId], references: [id])
//   serviceId Int
// }

model DesludgingServicePricing {
  id Int @id @default(autoincrement())

  fuelDistanceConst     Decimal            @db.Decimal(10, 2)
  insurance             Decimal            @db.Decimal(10, 2)
  repairCost            Decimal            @db.Decimal(10, 2)
  roadWorthy            Decimal            @db.Decimal(10, 2)
  unitFuelCost          Decimal            @db.Decimal(10, 2)
  workingDays           Int
  truckDepreciation     Int
  adminCost             Decimal          @db.Decimal(10, 2)
  overheadCost          Decimal            @db.Decimal(10, 2)
  toolsCost             Decimal            @db.Decimal(10, 2)
  profitPercentage      Decimal            @db.Decimal(10, 2)
  pumpDepreciation      Decimal            @db.Decimal(10, 2)
  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  truckClassificationId Int
  status                Int?                @default(0)
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  Region                Region              @relation(fields: [regionId], references: [id])
  // Location               Location            @relation(fields: [locationId], references: [id])

  // locationId String @db.VarChar(255)
  regionId Int

  Service       Service      @relation(fields: [serviceId], references: [id])
  serviceId     Int
  ServiceArea   ServiceArea? @relation(fields: [serviceAreaId], references: [id])
  serviceAreaId Int?
}


model WaterServicePricing {
  id Int @id @default(autoincrement())

  fuelDistanceConst     Decimal?            @db.Decimal(10, 2)
  insurance             Decimal?            @db.Decimal(10, 2)
  repairCost            Decimal?            @db.Decimal(10, 2)
  roadWorthy            Decimal?            @db.Decimal(10, 2)
  unitFuelCost          Decimal?            @db.Decimal(10, 2)
  workingDays           Int?
  truckDepreciation     Int?
  adminCost             Decimal?            @db.Decimal(10, 2)
  overheadCost          Decimal?            @db.Decimal(10, 2)
  toolsCost             Decimal?            @db.Decimal(10, 2)
  profitPercentage      Decimal?            @db.Decimal(10, 2)
  pumpDepreciation      Decimal?            @db.Decimal(10, 2)
  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  truckClassificationId Int
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  Region                Region              @relation(fields: [regionId], references: [id])
  // Location               Location            @relation(fields: [locationId], references: [id])

  // locationId String @db.VarChar(255)
  regionId      Int
  Service       Service      @relation(fields: [serviceId], references: [id])
  serviceId     Int
  ServiceArea   ServiceArea? @relation(fields: [serviceAreaId], references: [id])
  serviceAreaId Int?
}

model BiodigesterServicePricing {
  id Int @id @default(autoincrement())

  fuelDistanceConst     Decimal?            @db.Decimal(10, 2)
  insurance             Decimal?            @db.Decimal(10, 2)
  repairCost            Decimal?            @db.Decimal(10, 2)
  roadWorthy            Decimal?            @db.Decimal(10, 2)
  unitFuelCost          Decimal?            @db.Decimal(10, 2)
  workingDays           Int?
  truckDepreciation     Int?
  adminCost             Decimal?            @db.Decimal(10, 2)
  overheadCost          Decimal?            @db.Decimal(10, 2)
  toolsCost             Decimal?            @db.Decimal(10, 2)
  profitPercentage      Decimal?            @db.Decimal(10, 2)
  pumpDepreciation      Decimal?            @db.Decimal(10, 2)
  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  truckClassificationId Int
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  Region                Region              @relation(fields: [regionId], references: [id])
  // Location               Location            @relation(fields: [locationId], references: [id])
  // locationId             String              @db.VarChar(255)
  regionId              Int
  Service               Service             @relation(fields: [serviceId], references: [id])

  serviceId     Int
  ServiceArea   ServiceArea? @relation(fields: [serviceAreaId], references: [id])
  serviceAreaId Int?
}

model Operator {
  id                    String   @id @db.VarChar(255)
  userId                Int?
  passportPicture       String?  @db.Text
  idCardPicture         String?  @db.Text
  company               String?  @db.VarChar(255)
  officeLocation        String?  @db.VarChar(255)
  ghanaPostGPS          String?  @db.VarChar(255)
  licenseNumber         String?  @db.VarChar(255)
  licenseClassification Int?
  driversLicense        String?  @db.VarChar(255)
  deleted               Int?     @default(0)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model ProviderEarning {
  id             Int      @id @default(autoincrement())
  transactionId  String   @unique(map: "transactionId") @db.VarChar(255)
  operatorId     String?  @db.VarChar(255)
  amount         Decimal  @db.Decimal(10, 2)
  completionDate String   @db.VarChar(255)
  deleted        Int?     @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model OperatorRating {
  id         Int      @id @default(autoincrement())
  operatorId String   @db.VarChar(255)
  rating     Decimal? @default(0.0) @db.Decimal(2, 1)
  deleted    Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model TransactionRating {
  id            Int      @id @default(autoincrement())
  transactionId String   @unique(map: "transactionId") @db.VarChar(255)
  rating        Decimal? @default(0.0) @db.Decimal(2, 1)
  comment       String?  @db.VarChar(255)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model RatingBreakdown {
  id               Int      @id @default(autoincrement())
  ratingId         Int      @unique(map: "ratingId")
  helmet           Int?
  abusive          Int?
  overall          Int?
  boots            Int?
  respirator       Int?
  eyesProtector    Int?
  cashDemand       Int?
  damageProperty   Int?
  closeOpenSeal    Int?
  cleanEnvironment Int?
  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model ScannerUser {
  id            Int      @id @default(autoincrement())
  userId        Int?
  tipoffPointId Int?
  activated     Int?     @default(0)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Status {
  id        Int      @id @default(autoincrement())
  state     String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServicePoint {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  placeId   String?  @db.VarChar(255)
  address   String?  @db.VarChar(255)
  location  String?  @db.VarChar(255)
  latitude  Decimal? @db.Decimal(10, 6)
  longitude Decimal? @db.Decimal(10, 6)
  status    Int?     @default(1)
  deleted   Int?     @default(0)
  Service   Service  @relation(fields: [serviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  serviceId Int
}

model Transaction {
  id                  String   @id @db.VarChar(255)
  operatorId          String?  @db.VarChar(255)
  clientId            String?  @db.VarChar(255)
  unitCost            Decimal  @db.Decimal(10, 2)
  discountedTotalCost Decimal  @db.Decimal(10, 2)
  actualTotalCost     Decimal  @db.Decimal(10, 2)
  community           String   @db.VarChar(255)
  gpsAccuracy         Decimal? @db.Decimal(10, 2)
  lat                 Decimal? @db.Decimal(10, 8)
  lng                 Decimal? @db.Decimal(10, 8)
  axle                Int
  trips               Int
  paymentStatus       Int?     @default(0)
  currentStatus       Int
  requestTypeId       Int?     @default(1)
  toiletType          String?  @db.VarChar(255)
  deleted             Int?     @default(0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  requestSource       Int?
  customerName        String?  @db.VarChar(100)
  customerPhoneNumber String?  @db.VarChar(100)
  serviceType         Int?
}

model TransactionStatus {
  id            Int       @id @default(autoincrement())
  transactionId String    @db.VarChar(255)
  status        Int
  date          DateTime? @db.Date
  time          DateTime? @db.Time(0)
  deleted       Int?      @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model User {
  id          Int      @id @default(autoincrement())
  surname     String   @db.VarChar(255)
  otherNames  String   @db.VarChar(255)
  email       String?  @db.VarChar(255)
  phoneNumber String   @db.VarChar(255)
  fcm         String?  @db.VarChar(255)
  password    String   @db.VarChar(255)
  userTypeId  Int
  activated   Int?     @default(0)
  deleted     Int?     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vehicle {
  id                    Int                 @id @default(autoincrement())
  userId                Int?
  vehicleNumber         String?             @db.VarChar(255)
  owner                 String?             @db.VarChar(255)
  ownerNumber           String?             @db.VarChar(255)
  insuranceExpiry       String?             @db.VarChar(255)
  insuranceNumber       String?             @db.VarChar(255)
  roadWorthyExpiry      String?             @db.VarChar(255)
  roadWorthy            String?             @db.VarChar(255)
  tankCapacity          Int?
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  truckClassificationId Int
}

model Withdrawal {
  id               Int       @id @default(autoincrement())
  operatorId       String    @db.VarChar(255)
  transactionId    String?   @db.VarChar(255)
  amount           Int?
  disbursementDate DateTime?
  status           Int?      @default(0)
  approvedBy       Int?
  deleted          Int?      @default(0)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}
