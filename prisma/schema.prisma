generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Otp {
  id        Int      @id @default(autoincrement())
  code      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model TruckClassification {
  id    Int     @id @default(autoincrement())
  name  String  @unique(map: "axleClass") @db.VarChar(255)
  image String? @db.VarChar(255)

  serviceId                Int
  tankCapacity             Decimal                    @default(0.00) @db.Decimal(10, 2)
  serviceAreaId            Int
  deleted                  Int?                       @default(0)
  status                   Int?                       @default(0)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  Service                  Service                    @relation(fields: [serviceId], references: [id])
  Vehicle                  Vehicle[]
  EmptyingServicePricing   EmptyingServicePricing[]
  WaterServicePricing      WaterServicePricing[]
  ServiceArea              ServiceArea?               @relation(fields: [serviceAreaId], references: [id])
  TruckEmptyingTransaction TruckEmptyingTransaction[]
}

model Service {
  id                  Int                   @id @default(autoincrement())
  name                String?
  status              Int?                  @default(1)
  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  ServicePoint        ServicePoint[]
  TruckClassification TruckClassification[]

  EmptyingServicePricing EmptyingServicePricing[]
  WaterServicePricing    WaterServicePricing[]
  ServicesInArea         ServicesInArea[]
  Transaction            Transaction[]
  BiodigesterService     BiodigesterService[]
}

model Balance {
  id           Int        @id @default(autoincrement())
  balance      Decimal?   @default(0.00) @db.Decimal(10, 2)
  deleted      Int?       @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  MainEntity   MainEntity @relation(fields: [mainEntityId], references: [id])
  mainEntityId Int
}

// model Location {
//   id                        String                      @id @db.VarChar(255)
//   name                      String?
//   lat                       Decimal?                    @db.Decimal(10, 8)
//   lng                       Decimal?                    @db.Decimal(10, 8)
//   deleted                   Int?                        @default(0)
//   createdAt                 DateTime                    @default(now())
//   updatedAt                 DateTime                    @updatedAt
//   PricingModel              PricingModel[]
//   EmptyingServicePricing  EmptyingServicePricing[]
//   WaterServicePricing       WaterServicePricing[]
//   BiodigesterServicePricing BiodigesterServicePricing[]
// }

model TransactionClosure {
  id            Int      @id @default(autoincrement())
  userId        Int?
  transactionId String?  @db.VarChar(255)
  gpsAccuracy   Decimal? @db.Decimal(10, 2)
  lat           Decimal? @db.Decimal(10, 8)
  lng           Decimal? @db.Decimal(10, 8)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Discount {
  id        Int      @id @default(autoincrement())
  trip1     Decimal  @db.Decimal(10, 2)
  trip2     Decimal  @db.Decimal(10, 2)
  trip3     Decimal  @db.Decimal(10, 2)
  trip4     Decimal  @db.Decimal(10, 2)
  trip5     Decimal  @db.Decimal(10, 2)
  beyond5   Decimal  @db.Decimal(10, 2)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Region {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  latitude               Decimal?                 @db.Decimal(10, 6)
  longitude              Decimal?                 @db.Decimal(10, 6)
  deleted                Int?                     @default(0)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  EmptyingServicePricing EmptyingServicePricing[]
  WaterServicePricing    WaterServicePricing[]
  ServiceArea            ServiceArea[]
  District               District[]
}

model ServiceArea {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)

  // cityPolygon String @db.VarChar(255)
  lat1 Decimal @db.Decimal(10, 6)
  lng1 Decimal @db.Decimal(10, 6)
  lat2 Decimal @db.Decimal(10, 6)
  lng2 Decimal @db.Decimal(10, 6)
  lat3 Decimal @db.Decimal(10, 6)
  lng3 Decimal @db.Decimal(10, 6)
  lat4 Decimal @db.Decimal(10, 6)
  lng4 Decimal @db.Decimal(10, 6)

  regionId Int
  status   Int? @default(0)

  deleted                   Int?                        @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  TruckClassification       TruckClassification[]
  WaterServicePricing       WaterServicePricing[]
  BiodigesterServicePricing BiodigesterServicePricing[]
  EmptyingServicePricing    EmptyingServicePricing[]
  Region                    Region                      @relation(fields: [regionId], references: [id])
  ServicesInArea            ServicesInArea[]
  Transaction               Transaction[]
  User                      User[]
}

model ServicesInArea {
  id            Int         @id @default(autoincrement())
  serviceAreaId Int
  serviceId     Int
  ServiceArea   ServiceArea @relation(fields: [serviceAreaId], references: [id])
  status        Int?        @default(0)
  deleted       Int?        @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Service       Service     @relation(fields: [serviceId], references: [id])

  @@unique([serviceAreaId, serviceId], name: "areaServiceKey")
}

model BiodigesterService {
  id        Int     @id @default(autoincrement())
  name      String  @unique @db.VarChar(255)
  image     String? @db.VarChar(255)
  shortDesc String? @db.VarChar(255)
  fullDesc  String? @db.VarChar(255)

  status    Int?     @default(0)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Service   Service  @relation(fields: [serviceId], references: [id])

  BiodigesterServicePricing BiodigesterServicePricing[]
  serviceId                 Int
  BiodigesterType           BiodigesterType             @relation(fields: [biodigesterTypeId], references: [id])
  biodigesterTypeId         Int
  BiodigesterTransaction    BiodigesterTransaction[]
}

model BiodigesterType {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)

  status    Int?     @default(0)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BiodigesterService     BiodigesterService[]
  BiodigesterTransaction BiodigesterTransaction[]
}

model BiodigesterServicePricing {
  id                   Int         @id @default(autoincrement())
  biodigesterServiceId Int
  cost                 Int
  ServiceArea          ServiceArea @relation(fields: [serviceAreaId], references: [id])
  status               Int?        @default(0)
  deleted              Int?        @default(0)
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt

  BiodigesterService BiodigesterService @relation(fields: [biodigesterServiceId], references: [id])

  serviceAreaId Int

  @@unique([serviceAreaId, biodigesterServiceId], name: "areaBiodigesterServiceIdKey")
}

// model ServiceLocation {
//   id     Int    @id @default(autoincrement())
//   Region Region @relation(fields: [regionId], references: [id])
//   status Int?   @default(0)

//   deleted       Int?         @default(0)
//   createdAt     DateTime     @default(now())
//   updatedAt     DateTime     @updatedAt
//   regionId      Int
//   ServiceArea   ServiceArea? @relation(fields: [serviceAreaId], references: [id])
//   serviceAreaId Int?

//   Service   Service? @relation(fields: [serviceId], references: [id])
//   serviceId Int?
// }

model District {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  abbrv    String @db.VarChar(255)
  regionId Int

  deleted             Int?                  @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  DistrictCoordinates DistrictCoordinates[]
  Region              Region                @relation(fields: [regionId], references: [id])
}

model DistrictCoordinates {
  id         Int      @id @default(autoincrement())
  lat        Decimal  @db.Decimal(10, 8)
  lng        Decimal  @db.Decimal(10, 8)
  District   District @relation(fields: [districtId], references: [id])
  deleted    Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  districtId Int
}

model MainEntity {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Commission Commission[]
  Balance    Balance[]
}

model Commission {
  id           Int        @id @default(autoincrement())
  mainEntityId Int
  commission   Decimal    @unique(map: "commission") @db.Decimal(10, 2)
  status       Int?       @default(1)
  deleted      Int?       @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  MainEntity   MainEntity @relation(fields: [mainEntityId], references: [id])
  //icesspool and mmda
}

model Logs {
  id        Int      @id @default(autoincrement())
  userId    Int
  activity  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sms {
  id        Int      @id @default(autoincrement())
  type      String?  @db.VarChar(255)
  to        Int
  sentBy    Int
  message   String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        Int      @id @default(autoincrement())
  type      String?  @db.VarChar(255)
  to        Int
  sentBy    Int
  message   String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MomoAccount {
  id                Int      @id @default(autoincrement())
  serviceProviderId String   @unique(map: "serviceProviderId") @db.VarChar(255)
  momoNumber        String?  @db.VarChar(255)
  momoNetwork       Int?
  deleted           Int?     @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model MomoNetwork {
  id        Int      @id @default(autoincrement())
  network   String   @db.VarChar(255)
  abbrv     String   @db.VarChar(255)
  status    Int?     @default(0)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id            Int      @id @default(autoincrement())
  transactionId String   @db.VarChar(255)
  paymentId     String   @db.VarChar(255)
  status        Int?     @default(0)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  Transaction Transaction @relation(fields: [transactionId], references: [id])
}

// model PricingModel {
//   id Int @id @default(autoincrement())
//   // Location Location @relation(fields: [locationId], references: [id])

//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   // locationId String   @db.VarChar(255)
//   Service   Service  @relation(fields: [serviceId], references: [id])
//   serviceId Int
// }

model EmptyingServicePricing {
  id Int @id @default(autoincrement())

  fuelDistanceConst   Decimal @db.Decimal(10, 2)
  insurance           Decimal @db.Decimal(10, 2)
  repairCost          Decimal @db.Decimal(10, 2)
  roadWorthy          Decimal @db.Decimal(10, 2)
  unitFuelCost        Decimal @db.Decimal(10, 2)
  workingDays         Int
  truckDepreciation   Int
  adminCost           Decimal @db.Decimal(10, 2)
  overheadCost        Decimal @db.Decimal(10, 2)
  toolsCost           Decimal @db.Decimal(10, 2)
  profitPercentage    Decimal @db.Decimal(10, 2)
  pumpDepreciation    Decimal @db.Decimal(10, 2)
  elevy               Decimal @default(0) @db.Decimal(10, 2)
  otherServiceCharges Decimal @default(0) @db.Decimal(10, 2)

  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  truckClassificationId Int
  status                Int?                @default(0)
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  Region                Region?             @relation(fields: [regionId], references: [id])
  // Location               Location            @relation(fields: [locationId], references: [id])

  // locationId String @db.VarChar(255)
  regionId Int?

  Service       Service     @relation(fields: [serviceId], references: [id])
  serviceId     Int
  ServiceArea   ServiceArea @relation(fields: [serviceAreaId], references: [id])
  serviceAreaId Int
}

model WaterServicePricing {
  id Int @id @default(autoincrement())

  fuelDistanceConst     Decimal             @db.Decimal(10, 2)
  insurance             Decimal             @db.Decimal(10, 2)
  repairCost            Decimal             @db.Decimal(10, 2)
  roadWorthy            Decimal             @db.Decimal(10, 2)
  unitFuelCost          Decimal             @db.Decimal(10, 2)
  workingDays           Int
  truckDepreciation     Decimal             @db.Decimal(10, 2)
  adminCost             Decimal             @db.Decimal(10, 2)
  overheadCost          Decimal             @db.Decimal(10, 2)
  toolsCost             Decimal             @db.Decimal(10, 2)
  profitPercentage      Decimal             @db.Decimal(10, 2)
  pumpDepreciation      Decimal             @db.Decimal(10, 2)
  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  truckClassificationId Int
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  Region                Region              @relation(fields: [regionId], references: [id])
  // Location               Location            @relation(fields: [locationId], references: [id])

  // locationId String @db.VarChar(255)
  regionId      Int
  Service       Service      @relation(fields: [serviceId], references: [id])
  serviceId     Int
  ServiceArea   ServiceArea? @relation(fields: [serviceAreaId], references: [id])
  serviceAreaId Int?
}

// model BiodigesterServicePricing {
//   id Int @id @default(autoincrement())

//   fuelDistanceConst     Decimal?            @db.Decimal(10, 2)
//   insurance             Decimal?            @db.Decimal(10, 2)
//   repairCost            Decimal?            @db.Decimal(10, 2)
//   roadWorthy            Decimal?            @db.Decimal(10, 2)
//   unitFuelCost          Decimal?            @db.Decimal(10, 2)
//   workingDays           Int?
//   truckDepreciation     Int?
//   adminCost             Decimal?            @db.Decimal(10, 2)
//   overheadCost          Decimal?            @db.Decimal(10, 2)
//   toolsCost             Decimal?            @db.Decimal(10, 2)
//   profitPercentage      Decimal?            @db.Decimal(10, 2)
//   pumpDepreciation      Decimal?            @db.Decimal(10, 2)
//   TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
//   truckClassificationId Int
//   deleted               Int?                @default(0)
//   createdAt             DateTime            @default(now())
//   updatedAt             DateTime            @updatedAt
//   Region                Region              @relation(fields: [regionId], references: [id])
//   // Location               Location            @relation(fields: [locationId], references: [id])
//   // locationId             String              @db.VarChar(255)
//   regionId              Int
//   Service               Service             @relation(fields: [serviceId], references: [id])

//   serviceId     Int
//   ServiceArea   ServiceArea? @relation(fields: [serviceAreaId], references: [id])
//   serviceAreaId Int?
// }

model UserType {
  id                        Int          @id @default(autoincrement())
  name                      String       @unique @db.VarChar(255)
  userUpdatesAllowed        Int?         @default(0)
  userDeletionAllowed       Int?         @default(0)
  inspectionUpdatesAllowed  Int?         @default(0)
  inspectionPublishAllowed  Int?         @default(0)
  inspectionDeletionAllowed Int?         @default(0)
  deleted                   Int?         @default(0)
  createdAt                 DateTime     @default(now())
  updatedAt                 DateTime     @updatedAt
  PageAccess                PageAccess[]
  // PageActionAccess          PageActionAccess[]
  User                      User[]
}

model PageAccess {
  id         Int      @id @default(autoincrement())
  pageId     Int
  userTypeId Int
  deleted    Int?     @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Page       Page     @relation(fields: [pageId], references: [id])
  UserType   UserType @relation(fields: [userTypeId], references: [id])
}

model Page {
  id         Int          @id @default(autoincrement())
  name       String       @unique @db.VarChar(255)
  path       String?      @unique @db.VarChar(255)
  icon       String?      @db.VarChar(255)
  deleted    Int?         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  PageAccess PageAccess[]
  // PageAction PageAction[] @relation("PageToPageAction")
}

model ServiceProvider {
  id                    Int      @id @default(autoincrement())
  userId                Int      @unique
  idCardImg             String?  @db.VarChar(255)
  company               String?  @db.VarChar(255)
  officeLocation        String?  @db.VarChar(255)
  ghanaPostGPS          String?  @db.VarChar(255)
  licenseNumber         String?  @db.VarChar(255)
  licenseClassification Int?
  driversLicenseImg     String?  @db.VarChar(255)
  deleted               Int?     @default(0)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  User                  User     @relation(fields: [userId], references: [id])
}

model ServiceProviderEarning {
  id                Int      @id @default(autoincrement())
  transactionId     String   @unique(map: "transactionId") @db.VarChar(255)
  serviceProviderId String?  @db.VarChar(255)
  amount            Decimal  @db.Decimal(10, 2)
  completionDate    String   @db.VarChar(255)
  deleted           Int?     @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model ServiceProviderRating {
  id                Int      @id @default(autoincrement())
  serviceProviderId String   @db.VarChar(255)
  rating            Decimal? @default(0.0) @db.Decimal(2, 1)
  deleted           Int?     @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model TransactionRating {
  id            Int      @id @default(autoincrement())
  transactionId String   @unique(map: "transactionId") @db.VarChar(255)
  rating        Decimal? @default(0.0) @db.Decimal(2, 1)
  comment       String?  @db.VarChar(255)
  deleted       Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model RatingBreakdown {
  id               Int      @id @default(autoincrement())
  ratingId         Int      @unique(map: "ratingId")
  helmet           Int?
  abusive          Int?
  overall          Int?
  boots            Int?
  respirator       Int?
  eyesProtector    Int?
  cashDemand       Int?
  damageProperty   Int?
  closeOpenSeal    Int?
  cleanEnvironment Int?
  deleted          Int?     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

// model ScannerUser {
//   id            Int      @id @default(autoincrement())
//   userId        Int?
//   tipoffPointId Int?
//   activated     Int?     @default(0)
//   deleted       Int?     @default(0)
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
// }

model TxStatus {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  deleted   Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServicePoint {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  placeId     String?       @db.VarChar(255)
  address     String?       @db.VarChar(255)
  location    String?       @db.VarChar(255)
  latitude    Decimal?      @db.Decimal(10, 6)
  longitude   Decimal?      @db.Decimal(10, 6)
  status      Int?          @default(1)
  deleted     Int?          @default(0)
  Service     Service       @relation(fields: [serviceId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  serviceId   Int
  ScannerUser ScannerUser[]
}

model TruckEmptyingTransaction {
  id String @id @db.VarChar(255)

  community             String?             @db.VarChar(255)
  gpsAccuracy           Decimal?            @db.Decimal(10, 2)
  lat                   Decimal
  lng                   Decimal
  trips                 Int
  paymentStatus         Int?                @default(0)
  currentStatus         Int
  requestTypeId         Int?                @default(1)
  toiletType            String?             @db.VarChar(255)
  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  requestSource         Int?
  customerName          String?             @db.VarChar(100)
  customerPhoneNumber   String?             @db.VarChar(100)
  truckClassificationId Int
  // Provider              User                @relation("serviceProvider", fields: [serviceProviderId], references: [id])
  // serviceProviderId            Int
  // Client                User                @relation("client", fields: [clientId], references: [id])
  // clientId              Int
}

model Transaction {
  id                     String                   @id @db.VarChar(255)
  // unitCost               Decimal                  @db.Decimal(10, 2)
  discountedCost         Decimal?                 @db.Decimal(10, 2)
  cost                   Decimal                  @db.Decimal(10, 2)
  community              String?                  @db.VarChar(255)
  gpsAccuracy            Decimal?                 @db.Decimal(10, 2)
  lat                    Decimal
  lng                    Decimal
  trips                  Int                      @default(1)
  paymentStatus          Int?                     @default(0)
  transactionSchedule    Int?                     @default(0)
  currentStatus          Int                      @default(1)
  requestTypeId          Int?                     @default(1)
  deleted                Int?                     @default(0)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  requestSource          Int?
  customerName           String?                  @db.VarChar(100)
  customerPhoneNumber    String?                  @db.VarChar(100)
  Service                Service                  @relation(fields: [serviceId], references: [id])
  serviceId              Int
  ServiceProvider        User?                    @relation("serviceProvider", fields: [serviceProviderId], references: [id])
  serviceProviderId      Int?
  Customer               User                     @relation("customer", fields: [customerId], references: [id])
  customerId             Int
  BiodigesterTransaction BiodigesterTransaction[]
  ServiceArea            ServiceArea              @relation(fields: [serviceAreaId], references: [id])
  serviceAreaId          Int
  User                   User?                    @relation(fields: [userId], references: [id])
  userId                 Int?
  Payment                Payment[]
}

model BiodigesterTransaction {
  id            Int     @id @default(autoincrement())
  transactionId String  @db.VarChar(255)
  //biodigesterTypeId Int
  unitCost      Decimal @db.Decimal(10, 2)
  // BiodigesterType   BiodigesterType @relation(fields: [biodigesterTypeId], references: [id])
  // unitCost              Decimal             @db.Decimal(10, 2)
  // discountedCost        Decimal             @db.Decimal(10, 2)
  // actualCost            Decimal             @db.Decimal(10, 2)
  // community             String?             @db.VarChar(255)
  // gpsAccuracy           Decimal?            @db.Decimal(10, 2)
  // lat                   Decimal             @db.Decimal(10, 8)
  // lng                   Decimal             @db.Decimal(10, 8)
  // trips                 Int
  // paymentStatus         Int?                @default(0)
  // currentStatus         Int
  // requestTypeId         Int?                @default(1)
  // toiletType            String?             @db.VarChar(255)

  BiodigesterService BiodigesterService @relation(fields: [biodigesterServiceId], references: [id])
  deleted            Int?               @default(0)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  Transaction          Transaction      @relation(fields: [transactionId], references: [id])
  BiodigesterType      BiodigesterType? @relation(fields: [biodigesterTypeId], references: [id])
  biodigesterTypeId    Int?
  biodigesterServiceId Int
}

model TransactionStatus {
  id            Int       @id @default(autoincrement())
  transactionId String    @db.VarChar(255)
  status        Int
  date          DateTime? @db.Date
  time          DateTime? @db.Time(0)
  deleted       Int?      @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model User {
  id              Int           @id @default(autoincrement())
  lastName        String        @db.VarChar(255)
  firstName       String        @db.VarChar(255)
  email           String?       @db.VarChar(255)
  phoneNumber     String        @unique @db.VarChar(255)
  fcm             String?       @db.VarChar(255)
  password        String        @db.VarChar(255)
  passportPicture String?       @db.VarChar(255)
  passwordChanged Int?          @default(0)
  activated       Int?          @default(0)
  deleted         Int?          @default(0)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  serviceProvider Transaction[] @relation("serviceProvider")
  customer        Transaction[] @relation("customer")
  // serviceProvider Transaction[] @relation("serviceProvider", fields: [serviceProviderId], references: [id])
  // client   Transaction[] @relation("client", fields: [clientId], references: [id])
  // UserType        UserType?     @relation(fields: [userTypeId], references: [id])
  userTypeId      Int

  // UserType UserType @relation(fields: [userTypeId], references: [id])
  UserType UserType @relation(fields: [userTypeId], references: [id])

  ScannerUser     ScannerUser[]
  Vehicle         Vehicle[]
  ServiceProvider ServiceProvider?

  ServiceArea   ServiceArea?  @relation(fields: [serviceAreaId], references: [id])
  serviceAreaId Int?
  Transaction   Transaction[]
  Otp           Otp[]
}

// model UserType {
//   id        Int      @id @default(autoincrement())
//   name      String   @db.VarChar(255)
//   deleted   Int?     @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   User      User[]
// }

model Vehicle {
  id                    Int                 @id @default(autoincrement())
  userId                Int
  vehicleNumber         String?             @db.VarChar(255)
  owner                 String?             @db.VarChar(255)
  ownerNumber           String?             @db.VarChar(255)
  insuranceExpiry       String?             @db.VarChar(255)
  insuranceNumber       String?             @db.VarChar(255)
  roadWorthyExpiry      String?             @db.VarChar(255)
  roadWorthy            String?             @db.VarChar(255)
  tankCapacity          Int?
  deleted               Int?                @default(0)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  TruckClassification   TruckClassification @relation(fields: [truckClassificationId], references: [id])
  truckClassificationId Int
  User                  User                @relation(fields: [userId], references: [id])
}

model Withdrawal {
  id                Int       @id @default(autoincrement())
  serviceProviderId String    @db.VarChar(255)
  transactionId     String?   @db.VarChar(255)
  amount            Int?
  disbursementDate  DateTime?
  status            Int?      @default(0)
  approvedBy        Int?
  deleted           Int?      @default(0)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model ScannerUser {
  id             Int          @id @default(autoincrement())
  ServicePoint   ServicePoint @relation(fields: [servicePointId], references: [id])
  deleted        Int?         @default(0)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  servicePointId Int
  User           User         @relation(fields: [userId], references: [id])
  userId         Int
}
